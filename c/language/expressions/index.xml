<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>表达式 on 编程语言</title><link>https://before80.github.io/lang/c/language/expressions/</link><description>Recent content in 表达式 on 编程语言</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 12 Apr 2025 16:30:59 +0800</lastBuildDate><atom:link href="https://before80.github.io/lang/c/language/expressions/index.xml" rel="self" type="application/rss+xml"/><item><title>值类别</title><link>https://before80.github.io/lang/c/language/expressions/value_category/</link><pubDate>Sat, 12 Apr 2025 16:42:20 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/value_category/</guid><description>原文：https://zh.cppreference.com/w/c/language/value_category ​ C 中每个表达式（带有实</description></item><item><title>求值顺序</title><link>https://before80.github.io/lang/c/language/expressions/eval_order/</link><pubDate>Sat, 12 Apr 2025 16:45:19 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/eval_order/</guid><description>原文：https://zh.cppreference.com/w/c/language/eval_order ​ 除下列标出者，任意 C 运算符的运</description></item><item><title>常量表达式</title><link>https://before80.github.io/lang/c/language/expressions/constant_expression/</link><pubDate>Sat, 12 Apr 2025 16:49:42 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/constant_expression/</guid><description>原文：https://zh.cppreference.com/w/c/language/constant_expression ​ 表达式的数种</description></item><item><title>隐式转换</title><link>https://before80.github.io/lang/c/language/expressions/conversion/</link><pubDate>Sat, 12 Apr 2025 16:57:45 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/conversion/</guid><description>原文：https://zh.cppreference.com/w/c/language/conversion ​ 当表达式用在期待相异类型的值语</description></item><item><title>泛型选择 (C11 起)</title><link>https://before80.github.io/lang/c/language/expressions/generic/</link><pubDate>Sat, 12 Apr 2025 17:18:41 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/generic/</guid><description>原文：https://zh.cppreference.com/w/c/language/generic ​ 提供一种方式，基于控制表达式的类型，</description></item><item><title>整数常量</title><link>https://before80.github.io/lang/c/language/expressions/integer_constant/</link><pubDate>Sat, 12 Apr 2025 19:48:58 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/integer_constant/</guid><description>原文：https://zh.cppreference.com/w/c/language/integer_constant ​ 允许整数类型的值直</description></item><item><title>浮点数常量</title><link>https://before80.github.io/lang/c/language/expressions/floating_constant/</link><pubDate>Sat, 12 Apr 2025 20:00:46 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/floating_constant/</guid><description>原文：https://zh.cppreference.com/w/c/language/floating_constant ​ 允许直接在表达式</description></item><item><title>字符常量</title><link>https://before80.github.io/lang/c/language/expressions/character_constant/</link><pubDate>Sat, 12 Apr 2025 20:13:22 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/character_constant/</guid><description>原文：https://zh.cppreference.com/w/c/language/character_constant 语法 'c-字符 '</description></item><item><title>预定义布尔常量</title><link>https://before80.github.io/lang/c/language/expressions/bool_constant/</link><pubDate>Sat, 12 Apr 2025 20:23:19 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/bool_constant/</guid><description>原文：https://zh.cppreference.com/w/c/language/bool_constant 语法 true (1) (C23 起) false (2) (C23 起) 解</description></item><item><title>预定义空指针常量</title><link>https://before80.github.io/lang/c/language/expressions/nullptr/</link><pubDate>Sat, 12 Apr 2025 20:25:46 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/nullptr/</guid><description>原文：https://zh.cppreference.com/w/c/language/nullptr 语法 nullptr (C23 起) 解释 ​ 关键词 nullptr 代表预定义的</description></item><item><title>字符串字面量</title><link>https://before80.github.io/lang/c/language/expressions/string_literal/</link><pubDate>Sat, 12 Apr 2025 20:28:00 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/string_literal/</guid><description>原文：https://zh.cppreference.com/w/c/language/string_literal ​ 原位构造指定字符数组类</description></item><item><title>复合字面量 (C99 起)</title><link>https://before80.github.io/lang/c/language/expressions/compound_literal/</link><pubDate>Sat, 12 Apr 2025 20:33:43 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/compound_literal/</guid><description>原文：https://zh.cppreference.com/w/c/language/compound_literal ​ 就地构造一个指定类</description></item><item><title>C 运算符优先级</title><link>https://before80.github.io/lang/c/language/expressions/operator_precedence/</link><pubDate>Sat, 12 Apr 2025 20:37:24 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_precedence/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_precedence ​ 下表列出 C 运</description></item><item><title>成员访问运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_member_access/</link><pubDate>Sat, 12 Apr 2025 20:42:14 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_member_access/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_member_access ​ 成员访</description></item><item><title>逻辑运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_logical/</link><pubDate>Sat, 12 Apr 2025 20:47:16 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_logical/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_logical ​ 逻辑运算符对其操作</description></item><item><title>比较运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_comparison/</link><pubDate>Sat, 12 Apr 2025 20:50:51 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_comparison/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_comparison ​ 比较运算符是</description></item><item><title>算术运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_arithmetic/</link><pubDate>Sat, 12 Apr 2025 20:56:55 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_arithmetic/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_arithmetic ​ 算术运算符在</description></item><item><title>赋值运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_assignment/</link><pubDate>Sat, 12 Apr 2025 21:10:54 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_assignment/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_assignment ​ 赋值及复合赋</description></item><item><title>自增/自减运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_incdec/</link><pubDate>Sat, 12 Apr 2025 21:17:07 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_incdec/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_incdec ​ 自增/自减运算符是使</description></item><item><title>其他运算符</title><link>https://before80.github.io/lang/c/language/expressions/operator_other/</link><pubDate>Sat, 12 Apr 2025 21:19:36 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/operator_other/</guid><description>原文：https://zh.cppreference.com/w/c/language/operator_other ​ 汇集并不适合任何其他主</description></item><item><title>sizeof 运算符</title><link>https://before80.github.io/lang/c/language/expressions/sizeof/</link><pubDate>Sat, 12 Apr 2025 21:28:42 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/sizeof/</guid><description>原文：https://zh.cppreference.com/w/c/language/sizeof 查询对象或类型的大小。 在必须知道对象实际</description></item><item><title>_Alignof (C11 起)(C23 弃用), alignof (C23 起) 运算符</title><link>https://before80.github.io/lang/c/language/expressions/_Alignof/</link><pubDate>Sat, 12 Apr 2025 21:30:00 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/_Alignof/</guid><description>原文：https://zh.cppreference.com/w/c/language/_Alignof 查询其运算数类型的对齐要求。 语法 _Alignof( 类</description></item><item><title>转换运算符</title><link>https://before80.github.io/lang/c/language/expressions/cast/</link><pubDate>Sat, 12 Apr 2025 21:31:05 +0800</pubDate><guid>https://before80.github.io/lang/c/language/expressions/cast/</guid><description>原文：https://zh.cppreference.com/w/c/language/cast 进行显式类型转换。 语法 ( 类型名 ) 表达式 其中 类</description></item></channel></rss>