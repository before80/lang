<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>标准库 on 编程语言</title><link>https://before80.github.io/lang/c/std/</link><description>Recent content in 标准库 on 编程语言</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Fri, 11 Apr 2025 19:34:03 +0800</lastBuildDate><atom:link href="https://before80.github.io/lang/c/std/index.xml" rel="self" type="application/rss+xml"/><item><title>&lt;assert.h></title><link>https://before80.github.io/lang/c/std/assert/</link><pubDate>Thu, 24 Apr 2025 19:11:42 +0800</pubDate><guid>https://before80.github.io/lang/c/std/assert/</guid><description>类型 枚举 宏 assert 原址：https://zh.cppreference.com/w/c/error/assert 作用：若用户指定的条件非true，</description></item><item><title>&lt;complex.h> (C99)</title><link>https://before80.github.io/lang/c/std/complex/</link><pubDate>Thu, 24 Apr 2025 19:11:50 +0800</pubDate><guid>https://before80.github.io/lang/c/std/complex/</guid><description>类型 枚举 宏 I 原址：https://zh.cppreference.com/w/c/numeric/complex/I 作用：复数或虚数单位常量</description></item><item><title>&lt;ctype.h></title><link>https://before80.github.io/lang/c/std/ctype/</link><pubDate>Thu, 24 Apr 2025 19:20:52 +0800</pubDate><guid>https://before80.github.io/lang/c/std/ctype/</guid><description>类型 枚举 宏 函数 isalnum 原址：https://zh.cppreference.com/w/c/string/byte/isalnum 作用：检查字符是</description></item><item><title>&lt;errno.h></title><link>https://before80.github.io/lang/c/std/errno/</link><pubDate>Thu, 24 Apr 2025 19:22:33 +0800</pubDate><guid>https://before80.github.io/lang/c/std/errno/</guid><description>类型 枚举 宏 E2BIG, EACCES, &amp;hellip;, EXDEV 原址：https://zh.cppreference.com/w/c/error/errno_macros 作用：标准 POSIX 兼容</description></item><item><title>&lt;fenv.h> (C99)</title><link>https://before80.github.io/lang/c/std/fenv/</link><pubDate>Thu, 24 Apr 2025 19:22:48 +0800</pubDate><guid>https://before80.github.io/lang/c/std/fenv/</guid><description>类型 枚举 宏 FE_ALL_EXCEPT 原址：https://zh.cppreference.com/w/c/numeric/fenv/FE_exceptions 作用：</description></item><item><title>&lt;float.h></title><link>https://before80.github.io/lang/c/std/float/</link><pubDate>Thu, 24 Apr 2025 18:05:40 +0800</pubDate><guid>https://before80.github.io/lang/c/std/float/</guid><description>类型 枚举 宏 DBL_DECIMAL_DIG 原址： 作用：将 float/double/long double 转换为带有至少 FLT_DECIMAL_DIG/DBL_DECIMAL_DIG/LDBL_DECIMAL_DIG 个数位的十进制数，再转换回去为恒等转换：此为序列号/反序列化浮点数值所需的十进制精度。分别至少</description></item><item><title>&lt;inttypes.h> (C99)</title><link>https://before80.github.io/lang/c/std/inttypes/</link><pubDate>Thu, 24 Apr 2025 18:05:55 +0800</pubDate><guid>https://before80.github.io/lang/c/std/inttypes/</guid><description>类型 枚举 宏 函数 imaxabs 原址： 作用： 备注： imaxdiv 原址： 作用： 备注： strtoimax 原址：http://zh.cppreference.com/w/c/string/b</description></item><item><title>&lt;iso646.h> (C95)</title><link>https://before80.github.io/lang/c/std/iso646/</link><pubDate>Thu, 24 Apr 2025 18:06:25 +0800</pubDate><guid>https://before80.github.io/lang/c/std/iso646/</guid><description>类型 枚举 宏 and 原址： 作用： 备注： and_eq 原址： 作用： 备注： bitand 原址： 作用： 备注： bitor 原址： 作用： 备注： compl 原址： 作用： 备注： not 原址： 作用： 备注： not_eq 原址： 作</description></item><item><title>&lt;limits.h></title><link>https://before80.github.io/lang/c/std/limits/</link><pubDate>Thu, 24 Apr 2025 18:06:27 +0800</pubDate><guid>https://before80.github.io/lang/c/std/limits/</guid><description>类型 枚举 宏 BITINT_MAXWIDTH 原址： 作用：类型说明符 _BitInt(N) 中的位精确整数支持的最大宽度 N，大于或等于 ULLONG_WIDTH (宏常量) 备注： BOOL_MAX 原址： 作用：_Bool 的最大值 (宏常量) 备</description></item><item><title>&lt;locale.h></title><link>https://before80.github.io/lang/c/std/locale/</link><pubDate>Thu, 24 Apr 2025 18:06:28 +0800</pubDate><guid>https://before80.github.io/lang/c/std/locale/</guid><description>类型 lconv 原址：https://zh.cppreference.com/w/c/locale/lconv 作用：localeconv 所返回的格式化</description></item><item><title>&lt;math.h></title><link>https://before80.github.io/lang/c/std/math/</link><pubDate>Thu, 24 Apr 2025 21:19:15 +0800</pubDate><guid>https://before80.github.io/lang/c/std/math/</guid><description>类型 double_t 原址：https://zh.cppreference.com/w/c/numeric/math/float_t 作用：宽度至少等于 double 的最</description></item><item><title>&lt;setjmp.h></title><link>https://before80.github.io/lang/c/std/setjmp/</link><pubDate>Thu, 24 Apr 2025 18:33:23 +0800</pubDate><guid>https://before80.github.io/lang/c/std/setjmp/</guid><description>类型 jmp_buf 原址：https://zh.cppreference.com/w/c/program/jmp_buf 作用：执行上下文的类型 (typedef) 备注： 1 2</description></item><item><title>&lt;signal.h></title><link>https://before80.github.io/lang/c/std/signal/</link><pubDate>Thu, 24 Apr 2025 18:33:46 +0800</pubDate><guid>https://before80.github.io/lang/c/std/signal/</guid><description>类型 sig_atomic_t 原址：https://zh.cppreference.com/w/c/program/sig_atomic_t 作用：可以从异步信号处理</description></item><item><title>&lt;stdalign.h> (C11)(C23 弃用)</title><link>https://before80.github.io/lang/c/std/stdalign/</link><pubDate>Thu, 24 Apr 2025 18:35:12 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdalign/</guid><description>类型 枚举 宏 __alignas_is_defined 原址： 作用：展开为整数常量 1 (宏常量) 备注： __alignof_is_defined 原址： 作用：展开为整数常量 1 (宏常量) 备注： alignas 原址： 作用：便利宏，展开为关键词 _Alignas (</description></item><item><title>&lt;stdarg.h></title><link>https://before80.github.io/lang/c/std/stdarg/</link><pubDate>Thu, 24 Apr 2025 18:35:14 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdarg/</guid><description>类型 va_list 原址：https://zh.cppreference.com/w/c/variadic/va_list 作用：保有 va_start、va</description></item><item><title>&lt;stdatomic.h> (C11)</title><link>https://before80.github.io/lang/c/std/stdatomic/</link><pubDate>Thu, 24 Apr 2025 18:35:56 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdatomic/</guid><description>类型 atomic_flag 原址：https://zh.cppreference.com/w/c/atomic/atomic_flag 作用：免锁原子布尔标志 (结构</description></item><item><title>&lt;stdbit.h> (C23)</title><link>https://before80.github.io/lang/c/std/stdbit/</link><pubDate>Thu, 24 Apr 2025 18:40:59 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdbit/</guid><description>类型 stdc_bit_ceil 原址：https://zh.cppreference.com/mwiki/index.php?title=c/numeric/bit/</description></item><item><title>&lt;stdbool.h> (C99)(C23 弃用)</title><link>https://before80.github.io/lang/c/std/stdbool/</link><pubDate>Thu, 24 Apr 2025 18:42:19 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdbool/</guid><description>类型 枚举 宏 __bool_true_false_are_defined 原址： 作用：展开为整数常量 1 (宏常量) 备注： bool 原址： 作用：便利宏，展开为 _Bool (关键词宏) 备注： false 原址： 作用：展开为整数常量 ​0​ (</description></item><item><title>&lt;stdckdint.h></title><link>https://before80.github.io/lang/c/std/stdckdint/</link><pubDate>Thu, 24 Apr 2025 20:14:16 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdckdint/</guid><description>类型 枚举 宏 STDC_VERSION_STDCKDINT_H 原址： 作用： 备注： 函数 ckd_add 原址：https://zh.cppreference.com/w/c/numeric/ckd_add 作用</description></item><item><title>&lt;stddef.h></title><link>https://before80.github.io/lang/c/std/stddef/</link><pubDate>Thu, 24 Apr 2025 18:42:21 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stddef/</guid><description>类型 max_align_t 原址：https://zh.cppreference.com/w/c/types/max_align_t 作用：对齐要求不小于任何其他标</description></item><item><title>&lt;stdint.h> (C99)</title><link>https://before80.github.io/lang/c/std/stdint/</link><pubDate>Thu, 24 Apr 2025 18:43:05 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdint/</guid><description>类型 枚举 宏 INTMAX_C 原址： 作用： 备注： INTMAX_MAX 原址： 作用： 备注： INTMAX_MIN 原址： 作用： 备注： INTN_C 原址： 作用： 备注： INTN_MAX 原址： 作用： 备注： INTN_MIN 原址： 作用： 备注： INTPTR_MAX 原址： 作</description></item><item><title>&lt;stdio.h></title><link>https://before80.github.io/lang/c/std/stdio/</link><pubDate>Thu, 24 Apr 2025 22:16:01 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdio/</guid><description>类型 FILE 原址：http://zh.cppreference.com/w/c/io 作用： 备注： ​ &amp;lt;stdio.h&amp;gt; 头文件提供了通用的文件操作支持，并提供了具有窄</description></item><item><title>&lt;stdlib.h></title><link>https://before80.github.io/lang/c/std/stdlib/</link><pubDate>Thu, 24 Apr 2025 18:51:20 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdlib/</guid><description>类型 枚举 宏 EXIT_FAILURE 原址：https://zh.cppreference.com/w/c/program/EXIT_status 作用：表示程序的执行</description></item><item><title>&lt;stdmchar.h> (C29)</title><link>https://before80.github.io/lang/c/std/stdmchar/</link><pubDate>Thu, 24 Apr 2025 18:56:49 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdmchar/</guid><description>类型 char16_t 原址： 作用： 备注： char32_t 原址： 作用： 备注： char8_t 原址： 作用： 备注： mbstate_t 原址：http://zh.cppreference.com/w/c/str</description></item><item><title>&lt;stdnoreturn.h> (C11)(C23 弃用)</title><link>https://before80.github.io/lang/c/std/stdnoreturn/</link><pubDate>Thu, 24 Apr 2025 18:57:04 +0800</pubDate><guid>https://before80.github.io/lang/c/std/stdnoreturn/</guid><description>类型 枚举 宏 noreturn 原址： 作用：便利宏，展开为 _Noreturn (关键词宏) 备注： 函数</description></item><item><title>&lt;string.h></title><link>https://before80.github.io/lang/c/std/string/</link><pubDate>Thu, 24 Apr 2025 18:57:06 +0800</pubDate><guid>https://before80.github.io/lang/c/std/string/</guid><description>类型 size_t 原址：https://zh.cppreference.com/w/c/types/size_t 作用：sizeof 运算符返回的无符号整数</description></item><item><title>&lt;tgmath.h> (C99)</title><link>https://before80.github.io/lang/c/std/tgmath/</link><pubDate>Thu, 24 Apr 2025 19:01:51 +0800</pubDate><guid>https://before80.github.io/lang/c/std/tgmath/</guid><description>类型 枚举 宏 函数</description></item></channel></rss>