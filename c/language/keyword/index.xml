<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C 关键词 on 编程语言</title><link>https://before80.github.io/lang/c/language/keyword/</link><description>Recent content in C 关键词 on 编程语言</description><generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 12 Apr 2025 09:00:38 +0800</lastBuildDate><atom:link href="https://before80.github.io/lang/c/language/keyword/index.xml" rel="self" type="application/rss+xml"/><item><title>enum</title><link>https://before80.github.io/lang/c/language/keyword/enum/</link><pubDate>Sat, 12 Apr 2025 11:02:55 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/enum/</guid><description>原文：</description></item><item><title>alignas</title><link>https://before80.github.io/lang/c/language/keyword/alignas/</link><pubDate>Sat, 12 Apr 2025 10:53:18 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/alignas/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/alignas 用法 alignas 对齐指定符 (C23 起)</description></item><item><title>alignof</title><link>https://before80.github.io/lang/c/language/keyword/alignof/</link><pubDate>Sat, 12 Apr 2025 10:54:06 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/alignof/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/alignof 用法 alignof 运算符 (C23 起)</description></item><item><title>auto</title><link>https://before80.github.io/lang/c/language/keyword/auto/</link><pubDate>Sat, 12 Apr 2025 10:55:18 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/auto/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/auto 用法 无链接的自动存储期类限定符。 类型推断 (C23 起)</description></item><item><title>bool</title><link>https://before80.github.io/lang/c/language/keyword/bool/</link><pubDate>Sat, 12 Apr 2025 10:55:55 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/bool/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/bool 用法 布尔类型：用作该类型声明 (C23 起)</description></item><item><title>break</title><link>https://before80.github.io/lang/c/language/keyword/break/</link><pubDate>Sat, 12 Apr 2025 10:56:33 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/break/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/break 用法 break 语句：用作该语句的声明</description></item><item><title>case</title><link>https://before80.github.io/lang/c/language/keyword/case/</link><pubDate>Sat, 12 Apr 2025 10:57:01 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/case/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/case 用法 switch 语句：用作 case 标签的声明</description></item><item><title>char</title><link>https://before80.github.io/lang/c/language/keyword/char/</link><pubDate>Sat, 12 Apr 2025 10:57:33 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/char/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/char 用法 字符类型（ char 、 signed char 以及 unsigned char ）的类型指定符</description></item><item><title>const</title><link>https://before80.github.io/lang/c/language/keyword/const/</link><pubDate>Sat, 12 Apr 2025 10:58:07 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/const/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/const 用法 const 类型限定符</description></item><item><title>constexpr</title><link>https://before80.github.io/lang/c/language/keyword/constexpr/</link><pubDate>Sat, 12 Apr 2025 10:59:11 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/constexpr/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/constexpr 用法 constexpr 说明符 (C23 起)</description></item><item><title>continue</title><link>https://before80.github.io/lang/c/language/keyword/continue/</link><pubDate>Sat, 12 Apr 2025 10:59:37 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/continue/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/continue 用法 continue 语句：用作该语句的声明</description></item><item><title>default</title><link>https://before80.github.io/lang/c/language/keyword/default/</link><pubDate>Sat, 12 Apr 2025 11:00:31 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/default/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/default 用法 switch 语句：用作缺省情况标签的声明 泛型表</description></item><item><title>do</title><link>https://before80.github.io/lang/c/language/keyword/do/</link><pubDate>Sat, 12 Apr 2025 11:01:13 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/do/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/do 用法 do-while 循环：用作该循环的声明</description></item><item><title>double</title><link>https://before80.github.io/lang/c/language/keyword/double/</link><pubDate>Sat, 12 Apr 2025 11:01:42 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/double/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/double 用法 double 类型：用作该类型的声明 long double 类型：在与</description></item><item><title>else</title><link>https://before80.github.io/lang/c/language/keyword/else/</link><pubDate>Sat, 12 Apr 2025 11:02:14 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/else/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/else 用法 if 语句：用作替代分支的声明</description></item><item><title>内联汇编</title><link>https://before80.github.io/lang/c/language/keyword/asm/</link><pubDate>Sat, 12 Apr 2025 11:04:13 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/asm/</guid><description>原文：https://zh.cppreference.com/w/c/language/asm ​ 内联汇编（常由 asm 关键词引入）给予在 C 程序中嵌</description></item><item><title>extern</title><link>https://before80.github.io/lang/c/language/keyword/extern/</link><pubDate>Sat, 12 Apr 2025 11:06:56 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/extern/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/extern 用法 拥有内部或更常见的外部链接之一的静态存</description></item><item><title>false</title><link>https://before80.github.io/lang/c/language/keyword/false/</link><pubDate>Sat, 12 Apr 2025 11:07:39 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/false/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/false 用法 预定义布尔常量</description></item><item><title>float</title><link>https://before80.github.io/lang/c/language/keyword/float/</link><pubDate>Sat, 12 Apr 2025 11:08:14 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/float/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/float 用法 float 类型：用作该类型的声明</description></item><item><title>for</title><link>https://before80.github.io/lang/c/language/keyword/for/</link><pubDate>Sat, 12 Apr 2025 11:08:56 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/for/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/for 用法 for 循环：用作该循环的声明</description></item><item><title>goto</title><link>https://before80.github.io/lang/c/language/keyword/goto/</link><pubDate>Sat, 12 Apr 2025 11:09:41 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/goto/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/goto 用法 goto 语句：用作该语句的声明</description></item><item><title>if</title><link>https://before80.github.io/lang/c/language/keyword/if/</link><pubDate>Sat, 12 Apr 2025 11:11:26 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/if/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/if 用法 if 语句：用作 if 语句的声明</description></item><item><title>inline</title><link>https://before80.github.io/lang/c/language/keyword/inline/</link><pubDate>Sat, 12 Apr 2025 11:11:59 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/inline/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/inline 用法 inline 函数指定符 (C99 起)</description></item><item><title>int</title><link>https://before80.github.io/lang/c/language/keyword/int/</link><pubDate>Sat, 12 Apr 2025 11:13:07 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/int/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/int 用法 int 类型：用作该类型的声明</description></item><item><title>long</title><link>https://before80.github.io/lang/c/language/keyword/long/</link><pubDate>Sat, 12 Apr 2025 11:13:50 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/long/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/long 用法 long 类型修饰符</description></item><item><title>nullptr</title><link>https://before80.github.io/lang/c/language/keyword/nullptr/</link><pubDate>Sat, 12 Apr 2025 11:14:21 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/nullptr/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/nullptr 用法 nullptr pointer literal (C23 起)</description></item><item><title>register</title><link>https://before80.github.io/lang/c/language/keyword/register/</link><pubDate>Sat, 12 Apr 2025 11:15:04 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/register/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/register 用法 无链接的自动存储期类指定符。提示变</description></item><item><title>restrict</title><link>https://before80.github.io/lang/c/language/keyword/restrict/</link><pubDate>Sat, 12 Apr 2025 11:15:48 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/restrict/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/restrict 用法 restrict 类型限定符 (C99 起)</description></item><item><title>return</title><link>https://before80.github.io/lang/c/language/keyword/return/</link><pubDate>Sat, 12 Apr 2025 11:16:17 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/return/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/return 用法 return 语句：用作该语句的声明</description></item><item><title>short</title><link>https://before80.github.io/lang/c/language/keyword/short/</link><pubDate>Sat, 12 Apr 2025 11:17:19 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/short/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/short 用法 short 类型修饰符</description></item><item><title>signed</title><link>https://before80.github.io/lang/c/language/keyword/signed/</link><pubDate>Sat, 12 Apr 2025 11:17:50 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/signed/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/signed 用法 signed 类型修饰符</description></item><item><title>fortran</title><link>https://before80.github.io/lang/c/language/keyword/fortran/</link><pubDate>Sat, 12 Apr 2025 11:18:34 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/fortran/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/fortran 用法 为 Fortran 语言链接而设的条件性支持持类型指</description></item><item><title>sizeof</title><link>https://before80.github.io/lang/c/language/keyword/sizeof/</link><pubDate>Sat, 12 Apr 2025 11:19:10 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/sizeof/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/sizeof 用法 sizeof 运算符</description></item><item><title>static</title><link>https://before80.github.io/lang/c/language/keyword/static/</link><pubDate>Sat, 12 Apr 2025 11:19:54 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/static/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/static 用法 具有静态存储期和内部链接的文件作用域声</description></item><item><title>static_assert</title><link>https://before80.github.io/lang/c/language/keyword/static_assert/</link><pubDate>Sat, 12 Apr 2025 11:20:48 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/static_assert/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/static_assert 用法 静态断言声明 (C23 起)</description></item><item><title>struct</title><link>https://before80.github.io/lang/c/language/keyword/struct/</link><pubDate>Sat, 12 Apr 2025 11:21:18 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/struct/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/struct 用法 复合类型的声明</description></item><item><title>switch</title><link>https://before80.github.io/lang/c/language/keyword/switch/</link><pubDate>Sat, 12 Apr 2025 11:21:49 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/switch/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/switch 用法 switch 语句：用作该语句的声明</description></item><item><title>thread_local</title><link>https://before80.github.io/lang/c/language/keyword/thread_local/</link><pubDate>Sat, 12 Apr 2025 11:36:20 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/thread_local/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/thread_local 用法 线程存储类说明符 (C23 起)</description></item><item><title>true</title><link>https://before80.github.io/lang/c/language/keyword/true/</link><pubDate>Sat, 12 Apr 2025 11:37:04 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/true/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/true 用法 预定义布尔常量</description></item><item><title>typedef</title><link>https://before80.github.io/lang/c/language/keyword/typedef/</link><pubDate>Sat, 12 Apr 2025 11:37:33 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/typedef/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/typedef 用法 typedef 声明</description></item><item><title>typeof</title><link>https://before80.github.io/lang/c/language/keyword/typeof/</link><pubDate>Sat, 12 Apr 2025 11:38:07 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/typeof/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/typeof 用法 typeof 运算符 (C23 起)</description></item><item><title>typeof_unqual</title><link>https://before80.github.io/lang/c/language/keyword/typeof_unqual/</link><pubDate>Sat, 12 Apr 2025 11:38:46 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/typeof_unqual/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/typeof_unqual 用法 移除限定符的 typeof 运算符 (C23 起</description></item><item><title>union</title><link>https://before80.github.io/lang/c/language/keyword/union/</link><pubDate>Sat, 12 Apr 2025 11:39:28 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/union/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/union 用法 联合体类型的声明</description></item><item><title>unsigned</title><link>https://before80.github.io/lang/c/language/keyword/unsigned/</link><pubDate>Sat, 12 Apr 2025 11:40:01 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/unsigned/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/unsigned 用法 unsigned 类型修饰符</description></item><item><title>void</title><link>https://before80.github.io/lang/c/language/keyword/void/</link><pubDate>Sat, 12 Apr 2025 11:40:31 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/void/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/void 用法 void 类型：用作不完整类型的声明 void ：用于无参数</description></item><item><title>volatile</title><link>https://before80.github.io/lang/c/language/keyword/volatile/</link><pubDate>Sat, 12 Apr 2025 11:41:16 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/volatile/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/volatile 用法 volatile 类型限定符</description></item><item><title>while</title><link>https://before80.github.io/lang/c/language/keyword/while/</link><pubDate>Sat, 12 Apr 2025 11:41:48 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/while/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/while 用法 while 循环：用作该循环的声明 do-while 循环：用作循环</description></item><item><title>_Alignas</title><link>https://before80.github.io/lang/c/language/keyword/_Alignas/</link><pubDate>Sat, 12 Apr 2025 11:42:35 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Alignas/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Alignas 用法 _Alignas 对齐指定符。 (C11 起)</description></item><item><title>_Alignof</title><link>https://before80.github.io/lang/c/language/keyword/_Alignof/</link><pubDate>Sat, 12 Apr 2025 11:43:15 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Alignof/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Alignof 用法 _Alignof 运算符 (C11 起)</description></item><item><title>_BigInt</title><link>https://before80.github.io/lang/c/language/keyword/_BigInt/</link><pubDate>Sat, 12 Apr 2025 11:44:33 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_BigInt/</guid><description>原文：</description></item><item><title>_Atomic</title><link>https://before80.github.io/lang/c/language/keyword/_Atomic/</link><pubDate>Sat, 12 Apr 2025 11:43:54 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Atomic/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Atomic 用法 原子类型指定符及限定符 (C11 起)</description></item><item><title>_Bool</title><link>https://before80.github.io/lang/c/language/keyword/_Bool/</link><pubDate>Sat, 12 Apr 2025 11:46:03 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Bool/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Bool 用法 布尔类型：用作该类型的声明(C99 起)(</description></item><item><title>_Complex</title><link>https://before80.github.io/lang/c/language/keyword/_Complex/</link><pubDate>Sat, 12 Apr 2025 11:48:06 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Complex/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Complex 用法 _Complex 类型：用作该类型的声明 (C99 起)</description></item><item><title>_Decimal128</title><link>https://before80.github.io/lang/c/language/keyword/_Decimal128/</link><pubDate>Sat, 12 Apr 2025 11:48:53 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Decimal128/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Decimal128 用法 _Decimal128 类型：用作该类型的声明 (C23 起</description></item><item><title>_Decimal32</title><link>https://before80.github.io/lang/c/language/keyword/_Decimal32/</link><pubDate>Sat, 12 Apr 2025 11:49:22 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Decimal32/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Decimal32 用法 _Decimal32 类型：用作该类型的声明 (C23 起)</description></item><item><title>_Decimal64</title><link>https://before80.github.io/lang/c/language/keyword/_Decimal64/</link><pubDate>Sat, 12 Apr 2025 11:49:57 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Decimal64/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Decimal64 用法 _Decimal64 类型：用作该类型的声明 (C23 起)</description></item><item><title>_Generic</title><link>https://before80.github.io/lang/c/language/keyword/_Generic/</link><pubDate>Sat, 12 Apr 2025 11:50:29 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Generic/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Generic 用法 泛型表达式 (C11 起)</description></item><item><title>_Imaginary</title><link>https://before80.github.io/lang/c/language/keyword/_Imaginary/</link><pubDate>Sat, 12 Apr 2025 11:52:40 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Imaginary/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Imaginary 用法 虚浮点数类型说明符 (C99 起)</description></item><item><title>_Noreturn</title><link>https://before80.github.io/lang/c/language/keyword/_Noreturn/</link><pubDate>Sat, 12 Apr 2025 11:53:15 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Noreturn/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Noreturn 用法 _Noreturn 函数说明符 (C23 弃用) _Noreturn 属性记号 (C23</description></item><item><title>_Static_assert</title><link>https://before80.github.io/lang/c/language/keyword/_Static_assert/</link><pubDate>Sat, 12 Apr 2025 11:54:27 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Static_assert/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Static_assert 用法 _Static_assert 声明 (C11 起)(C23 弃</description></item><item><title>_Thread_local</title><link>https://before80.github.io/lang/c/language/keyword/_Thread_local/</link><pubDate>Sat, 12 Apr 2025 11:55:03 +0800</pubDate><guid>https://before80.github.io/lang/c/language/keyword/_Thread_local/</guid><description>原文：https://zh.cppreference.com/w/c/keyword/_Thread_local 用法 线程存储类限定符。 (C11 起)</description></item></channel></rss>